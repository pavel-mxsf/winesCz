'use strict';
var q = require('q');
var db = require('mongodb').MongoClient;

function promisify(nodeAsyncFn, context) {
    return function() {
        var defer = q.defer()
            , args = Array.prototype.slice.call(arguments);

        args.push(function(err, val) {
            if (err !== null) {
                return defer.reject(err);
            }
            return defer.resolve(val);
        });

        nodeAsyncFn.apply(context || {}, args);
        return defer.promise;
    };
}

function toFile(filename) {
    return function (data) {
        var fs = require('fs');
        var writeFile = promisify(fs.writeFile);
        return writeFile(filename, JSON.stringify(data, null, 4));
    }
}

/*
var options = {
host:
port:
db:
username:
password:
}
*/

function mongoConnect(options) {
    var deferred = q.defer();
    options = {
        host: options.host || 'localhost',
        port: options.port ||  27017,
        db: options.db || 'winescz',
        username: options.username || undefined,
        password: options.password || undefined
    };
    db.connect('mongodb://'+options.host+':'+options.port+'/'+options.db, function(err, db) {
        if(err) {
            deferred.reject(err);
        }
        else {
            if (options.username && options.password) {
                 db.authenticate(options.username, options.password, function(err, res){
                     if(err) {
                         deferred.reject(err);
                     }
                     else
                     {
                         deferred.resolve(db);
                     }
                 })
            }
            else {
                deferred.resolve(db);
            }
        }
    });
    return deferred.promise;
}

function toMongo(options) {
    return function(data) {
        return mongoConnect(options).then(
            function(db) {
                var collection = db.collection('wines');
                data.forEach(function(item){
                    collection.insert(item, function(err, docs) {})
                })
            })
        }
}

module.exports = {
    toFile: toFile,
    toMongo: toMongo


}